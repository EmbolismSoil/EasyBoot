1 需要一个栈空间(不同模式下的栈空间不一致，需要小心设置)
2 需要一个堆空间（储备）
3 使用UBOOT的空间划分方法： 0x33f80000 UBOOT镜像
			    RAM_BASE -> 0x33f80000 自由规划
根据UBOOT的内存使用划分
下面是从uboot 的readme 中摘出来的内存方面的描述
		So a typical memory configuration with 16 MB of DRAM could look like this:
	
		0x0000 0000	Exception Vector code
		      :
		0x0000 1FFF
		0x0000 2000	Free for Application Use
		      :
		      :
	
		      :
		      :
		0x00FB FF20	Monitor Stack (Growing downward)
		0x00FB FFAC	Board Info Data and permanent copy of global data
		0x00FC 0000	Malloc Arena
		      :
		0x00FD FFFF
		0x00FE 0000	RAM Copy of Monitor Code
		...		eventually: LCD or video framebuffer
		...		eventually: pRAM (Protected RAM - unchanged by reset)
		0x00FF FFFF	[End of RAM]
